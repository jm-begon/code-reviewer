#!/usr/bin/env python
import argparse
import os

from pathlib import Path
from http.server import HTTPServer

from reviewer.server import MakeRequestHandlerAt


HOST = 'localhost'

parser = argparse.ArgumentParser(
    description='start a code-reviewer interface to review the code in the '
                'current working directory; the selected code is in loaded in '
                'memory and the annotations are saved in a .rvw file that '
                'respect the json format.'
)
parser.add_argument('directory', nargs='?', help='path of directory to be '
    'reviewed if not the current working directory', default=os.getcwd())
parser.add_argument('--port', help='port at which the server runs', type=int,
    default=8080)
parser.add_argument('--no-open', help='prevent opening the default browser at '
                    'the main page', action='store_true')
args = parser.parse_args()


# Instantiate the request handler that will be used by the HTTP server. This
# handler is responsible for generating the pages (or just take actions such as
# saving annotations on a code) given the HTTP request received by the HTTP
# server
RequestHandler = MakeRequestHandlerAt(Path(args.directory))
server = HTTPServer((HOST, args.port), RequestHandler)
try:
    print(f'Server started at http://{HOST}:{args.port}'.format(HOST, args.port))
    if not args.no_open:
        os.system(f'open http://{HOST}:{args.port}')  # [!!!] maybe only ok for macOS
    server.serve_forever()

except KeyboardInterrupt:
    print('\nGoodbye')
    server.server_close()
